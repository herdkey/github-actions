name: "Docker ECR Build and Push"
author: "savi"
description: |
  Log into ECR via OIDC. Ensure repo exists. Derive branch and short-sha tags.

inputs:
  aws-account-id:
    description: "AWS Account ID that hosts the ECR repo"
    required: true
  aws-region:
    description: "AWS Region"
    required: false
    default: "us-west-2"
  env-name:
    description: "Environment name used for role/repo naming (e.g., dev, prod)"
    required: false
    default: "dev"
  debug-oidc:
    description: "Enable debug logging for OIDC"
    required: false
    default: "false"
  component-name:
    description: >-
      Component name being built (e.g., api, worker).
      This will become the final segment of the ECR repo name.
    required: false
    default: "api"
  dockerfile:
    description: "Path to Dockerfile"
    required: false
    default: "docker/Dockerfile"
  working-directory:
    description: "Directory containing Docker context"
    required: false
    default: "."

outputs:
  repo-slug:
    description: "Repo slug"
    value: ${{ steps.aws-login.outputs.REPO_SLUG }}
  short-sha:
    description: "Short SHA of current commit"
    value: ${{ steps.define-tags.outputs.SHORT_SHA }}
  sanitized-branch:
    description: "Branch of current commit"
    value: ${{ steps.define-tags.outputs.SANITIZED_BRANCH }}
  sha-tag:
    description: "ECR tag using the short SHA as the version. This tag is immutable."
    value: ${{ steps.define-tags.outputs.SHA_TAG }}
  branch-tag:
    description: |
      ECR tag using the sanitized branch name as the version.
      This tag is mutable. It is overwritten on every push to the branch.
    value: ${{ steps.define-tags.outputs.BRANCH_TAG }}

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: AWS Login
      id: aws-login
      uses: ./.github/actions/aws-login
      with:
        aws-account-id: ${{ inputs.aws-account-id }}
        aws-region: ${{ inputs.aws-region }}
        env-name: ${{ inputs.env-name }}
        debug-oidc: true

    - name: Ensure ECR repository exists
      shell: bash
      run: |
        aws ecr describe-repositories --repository-names "${{ inputs.env-name }}/$REPO_SLUG/${{ inputs.component-name }}" || \
        aws ecr create-repository --repository-name "${{ inputs.env-name }}/$REPO_SLUG/${{ inputs.component-name }}"

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Define Tags
      id: define-tags
      shell: bash
      run: "${{ github.action_path }}/scripts/define_tags.sh"
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ENV_NAME: ${{ inputs.env-name }}
