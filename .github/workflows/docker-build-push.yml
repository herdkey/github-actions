name: Docker Build & Push

on:
  workflow_call:
    inputs:
      aws-account-id:
        type: string
        description: AWS Account ID
        required: false
        default: "073835883885"   # infra account, where the main ECR registry lives
      aws-region:
        type: string
        description: AWS Region
        required: false
        default: us-west-2
      env-name:
        type: string
        description: Environment name used for role/repo naming (e.g., test, play, stage, prod)
        required: true
      component:
        type: string
        description: Component name being built (e.g., api, worker)
        required: true
      artifact-name:
        type: string
        description: Name of the artifact to download
        required: false
        default: ''
      artifact-path:
        type: string
        description: Name of the artifact to download
        required: false
        default: './artifacts'
      build-cmd:
        type: string
        description: The command or script to run to build the image
        required: true
      local-image-tag:
        type: string
        description: The tag applied by the `just docker-build` recipe
        required: true
    outputs:
      branch-tag:
        description: Full ECR URI with branch tag (mutable, e.g., 123456.dkr.ecr.us-west-2.amazonaws.com/test/repo/api:main)
        value: ${{ jobs.docker-build-push.outputs.branch-tag }}
      sha-tag:
        description: Full ECR URI with SHA tag (immutable, e.g., 123456.dkr.ecr.us-west-2.amazonaws.com/test/repo/api:abc1234)
        value: ${{ jobs.docker-build-push.outputs.sha-tag }}
      ecr-registry:
        description: ECR registry URL (e.g., 123456.dkr.ecr.us-west-2.amazonaws.com)
        value: ${{ jobs.docker-build-push.outputs.ecr-registry }}
      ecr-repository:
        description: ECR repository name (e.g., test/repo/api)
        value: ${{ jobs.docker-build-push.outputs.ecr-repository }}
      sha-version:
        description: Short SHA of the commit (e.g., abc1234)
        value: ${{ jobs.docker-build-push.outputs.short-sha }}
      branch-version:
        description: Sanitized branch name (e.g., main, feature-branch)
        value: ${{ jobs.docker-build-push.outputs.sanitized-branch }}

jobs:
  docker-build-push:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      branch-tag: ${{ steps.ecr-setup.outputs.branch-tag }}
      sha-tag: ${{ steps.ecr-setup.outputs.sha-tag }}
      ecr-registry: ${{ steps.ecr-setup.outputs.ecr-registry }}
      ecr-repository: ${{ steps.ecr-setup.outputs.ecr-repository }}
      short-sha: ${{ steps.ecr-setup.outputs.short-sha }}
      sanitized-branch: ${{ steps.ecr-setup.outputs.sanitized-branch }}
    env:
      env_name: test
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          version: latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1
        with:
          version: latest

      - name: AWS Login
        id: aws-login
        uses: savisec/github-actions/.github/actions/aws-login@v1
        with:
          aws-account-id: ${{ inputs.aws-account-id }}
          aws-region: ${{ inputs.aws-region }}
          env-name: ${{ inputs.env-name }}
          debug-oidc: true

      - name: ECR Setup
        id: ecr-setup
        uses: savisec/github-actions/.github/actions/ecr-setup@v1
        with:
          env-name: ${{ inputs.env-name }}
          component: ${{ inputs.component }}

      - name: Download artifact
        uses: actions/download-artifact@v5
        if: ${{ inputs.artifact-name != '' }}
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ inputs.artifact-path }}

      - name: Export envs
        run: |
          echo "COMPONENT=${{ inputs.component }}" >> $GITHUB_ENV

      # Run the caller's build command. This must build the docker image
      # and tag it with ${{ inputs.local-image-tag }}.
      - name: Build
        run: ${{ inputs.build-cmd }}

      # Push the mutable branch tag first, then the mutable SHA tag.
      # Both pushes push the same image layers. ECR deduplicates by layer digest.
      - name: Push Branch Tag
        run: |
          # Tag the image so we can push it to ECR.
          BRANCH_TAG="${{ steps.ecr-setup.outputs.branch-tag }}"
          docker tag "${{ inputs.local-image-tag }}" "$BRANCH_TAG"
          docker push "$BRANCH_TAG"

      - name: Push SHA Tag
        run: |
          SHA_TAG="${{ steps.ecr-setup.outputs.sha-tag }}"
          docker tag "${{ inputs.local-image-tag }}" "$SHA_TAG"
          docker push "$SHA_TAG"
